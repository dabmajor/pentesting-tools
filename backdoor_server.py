import socket
import os
import platform


def main():
    server = establish_listener()
    print("Server listener established")
    server.listen(1)
    listen(server)


def establish_listener():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    server.bind(("", 4444))  # bind requires tuple
    server.listen(1)
    return server


def listen(server):
    connection, address = server.accept()
    while 1:
        try:
            data = connection.recv(1024)
        except:
            continue

        if data.decode('utf-8') == '1':
            response = platform.platform() + " " + platform.machine()
            connection.sendall(response.encode())
        elif data.decode('utf-8') == '2':
            folder_path = connection.recv(1024)
            folder_path = folder_path.decode('utf-8')
            if folder_path[-1] != "/":
                folder_path += "/"
            print("[-] Folder contents for path {0} has been request...".format(folder_path))
            try:
                filelist = os.listdir(folder_path)
                response = ""
                for file in filelist:
                    response += ",{0}".format(file)
                print("Sending list:")
                print(response)
            except:
                print("[-] Invalid path input received!")
                response = "[-] {0} is not a valid folder path"
            connection.sendall(response.encode())
        elif data.decode('utf-8') == '0':
            connection.close()
            print("[-] Current connection closed")
            print("[-] Waiting for new client to connect...")
            connection, address = server.accept()
        elif data.decode('utf-8') == '9':
            connection.close()
            print("[-] Killing the server")
            server.close()
            break


if __name__ == "__main__":
    main()
